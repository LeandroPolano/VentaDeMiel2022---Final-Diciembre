@model VentaDeMiel2022.Web.Models.Envase.EnvaseEditVm

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Envase", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EnvaseId)
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoEnvaseId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TipoEnvaseId, new SelectList(Model.TiposEnvase, "TipoEnvaseId", "Descripcion"), "Seleccione Tipo de Envase", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TipoEnvaseId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="card">
                    @if (Model.Imagen != null)
                    {
                        <img id="imgSalida" src="@Url.Content(Model.Imagen)" class="card-img-top" alt="Imágen de @Model.Descripcion" style="width: 50%" />
                    }
                    else
                    {
                        <img id="imgSalida" src="@Url.Content("~/Content/Imagenes/Envases/SinImagenDisponible.jpg")" class="card-img-top" alt="Sin imágen disponible" style="width: 50%" />
                    }
                  
                    <div class="card-body">
                        <div class="col-md-10">
                            <span class="btn btn-default btn-file" id=file-input>
                                @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file" })
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Agregar más propiedades según sea necesario -->

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Editar" class="btn btn-warning" />
                        @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-success" })
                    </div>
                </div>

            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

